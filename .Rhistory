library(tidyverse)
library(lubridate)
set.seed(19092019)
# Data --------------------------------------------------------------------
temp <- tempfile()
download.file("https://sparnordopenbanking.com/downloads/open_dataset.zip", temp)
data1 <- read_csv(unz(temp, "atm_data_part1.csv"))
data2 <- read_csv(unz(temp, "atm_data_part2.csv"),
col_types = cols(rain_3h = col_double()))
unlink(temp)
# Binding the data --------------------------------------------------------
data <- bind_rows(data1, data2)
data$date <- ymd(paste0(data$year, "-", data$month, "-", data$day))
sATM <- sample_n(data, 100000, replace=F)
sATM$euro <- ifelse(sATM$currency == "EUR", TRUE, FALSE)
sATM$euro <- as.factor(sATM$euro)
ml <- sATM %>%
select(euro, month, day, weekday, hour, atm_location, card_type, weather_main) %>%
mutate(card_type = as.factor(card_type),
atm_location = as.factor(atm_location))
index    <- createDataPartition(ml$euro, p = 0.75, list = FALSE)
library(tidyverse)
library(ggforce)
library(caret)
library(yardstick)
library(knitr)
library(ggthemes)
library(ggridges)
library(kableExtra)
index    <- createDataPartition(ml$euro, p = 0.75, list = FALSE)
training <- ml[index,]
test     <- ml[-index,]
paste0("The training set has ", dim(training)[1],
" And the test set has ", dim(test)[1], " observations")
cv <- trainControl(method = "cv", number = 5)
fit_log <- train(euro ~ .,
data      = training,
trControl = cv,
tuneGrid  = expand.grid(alpha  = 0.5,
lambda = 0),
method    = "glmnet",
family    = "binomial",
metric    = 'Accuracy')
#pred_raf <- predict(fit_raf,  test)
#conf_raf <- table(pred_raf, test$euro)
#conf_raf
pred_log <- predict(fit_log,  test)
conf_log <- table(pred_log, test$euro)
conf_log
random <- rbinom(n    = length(test$euro), size = 1,
prob = mean(as.logical(training$euro)))
conf_ran <- table(as.factor(if_else(random==1, "TRUE", "FALSE")), test$euro)
conf_ran
raf <- rbind(spec(conf_raf), precision(conf_raf), accuracy(conf_raf))
#raf <- rbind(spec(conf_raf), precision(conf_raf), accuracy(conf_raf))
log <- rbind(spec(conf_log), precision(conf_log), accuracy(conf_log))
ran <- rbind(spec(conf_ran), precision(conf_ran), accuracy(conf_ran))
#raf$model <- "Random Forrest"
log$model <- "Logistic Regression"
ran$model <- "Random Assignment"
df <- rbind(raf, log, ran)
#raf <- rbind(spec(conf_raf), precision(conf_raf), accuracy(conf_raf))
log <- rbind(spec(conf_log), precision(conf_log), accuracy(conf_log))
ran <- rbind(spec(conf_ran), precision(conf_ran), accuracy(conf_ran))
#raf$model <- "Random Forrest"
log$model <- "Logistic Regression"
ran$model <- "Random Assignment"
df <- rbind(log, ran)
ggplot(df, aes(.metric, .estimate, fill = reorder(model, desc(.estimate)))) +
geom_col(position="dodge", width = 0.6) +
scale_fill_tableau(palette = "Miller Stone", type = "regular") +
labs(title="Model performance on predicting Legendary status",
subtitle="Crossvalidated 1/5 split", fill="Predictive Model")
#raf <- rbind(spec(conf_raf), precision(conf_raf), accuracy(conf_raf))
log <- rbind(spec(conf_log), precision(conf_log), accuracy(conf_log), recall(conf_log), npv(conf_log))
#raf <- rbind(spec(conf_raf), precision(conf_raf), accuracy(conf_raf))
log <- rbind(spec(conf_log), precision(conf_log), accuracy(conf_log), recall(conf_log), npv(conf_log))
ran <- rbind(spec(conf_ran), precision(conf_ran), accuracy(conf_ran), recall(conf_ran), npv(conf_ran))
#raf$model <- "Random Forrest"
log$model <- "Logistic Regression"
ran$model <- "Random Assignment"
df <- rbind(log, ran)
ggplot(df, aes(.metric, .estimate, fill = reorder(model, desc(.estimate)))) +
geom_col(position="dodge", width = 0.6) +
scale_fill_tableau(palette = "Miller Stone", type = "regular") +
labs(title="Model performance on predicting Legendary status",
subtitle="Crossvalidated 1/5 split", fill="Predictive Model")
load(file="generated_data/sATM.Rdata")
View(sATM)
library(tidyverse)
library(ggforce)
install.packages("ggforce")
library(tidyverse)
library(ggforce)
library(caret)
library(yardstick)
install.packages("yardstick")
install.packages("ggthemes")
install.packages("ggridges")
library(tidyverse)
library(ggforce)
library(caret)
library(yardstick)
library(knitr)
library(ggthemes)
library(ggridges)
library(kableExtra)
install.packages("kableExtra")
install.packages("VIM")
library(tidyverse)
library(ggforce)
library(caret)
library(yardstick)
library(knitr)
library(ggthemes)
library(ggridges)
library(kableExtra)
library(VIM)
install.packages("VIM")
library(tidyverse)
library(ggforce)
library(caret)
library(yardstick)
library(knitr)
library(ggthemes)
library(ggridges)
library(kableExtra)
library(VIM)
install.packages("VIM")
