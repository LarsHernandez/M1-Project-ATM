fdata %>% group_by(Region) %>% summarise(N=n()) %>% t() %>% kable()
fdata %>% group_by(Region) %>% summarise(N=n()) %>% t() %>% kable()
cat(paste0("Size of training set: ",nrow(training),
"Logistic: ", round(difftime(b,a, units = "mins"),2),"\n",
"Elastic:  ", round(difftime(c,b, units = "mins"),2),"\n",
"Tree:     ", round(difftime(d,c, units = "mins"),2),"\n",
"Bagged:   ", round(difftime(e,d, units = "mins"),2),"\n",
"RF:       ", round(difftime(f,e, units = "mins"),2),"\n",
"SVM:      ", round(difftime(g,f, units = "mins"),2),"\n",
"Total:    ", round(difftime(g,a, units = "mins"),2),"\n"))
cat(paste0("Size of training set: ",nrow(training),"\n"
"Logistic: ", round(difftime(b,a, units = "mins"),2),"\n",
cat(paste0("Size of training set: ",nrow(training),"\n",
"Logistic: ", round(difftime(b,a, units = "mins"),2),"\n",
"Elastic:  ", round(difftime(c,b, units = "mins"),2),"\n",
"Tree:     ", round(difftime(d,c, units = "mins"),2),"\n",
"Bagged:   ", round(difftime(e,d, units = "mins"),2),"\n",
"RF:       ", round(difftime(f,e, units = "mins"),2),"\n",
"SVM:      ", round(difftime(g,f, units = "mins"),2),"\n",
"Total:    ", round(difftime(g,a, units = "mins"),2),"\n"))
cat(paste0("Size of training set: ",nrow(training)," rows\n","\n",
"Logistic: ", round(difftime(b,a, units = "mins"),2),"\n",
"Elastic:  ", round(difftime(c,b, units = "mins"),2),"\n",
"Tree:     ", round(difftime(d,c, units = "mins"),2),"\n",
"Bagged:   ", round(difftime(e,d, units = "mins"),2),"\n",
"RF:       ", round(difftime(f,e, units = "mins"),2),"\n",
"SVM:      ", round(difftime(g,f, units = "mins"),2),"\n",
"Total:    ", round(difftime(g,a, units = "mins"),2),"\n"))
cat(paste0("Size of training set: ",nrow(training)," rows of 2.5m\n","\n",
"Logistic: ", round(difftime(b,a, units = "mins"),2),"\n",
"Elastic:  ", round(difftime(c,b, units = "mins"),2),"\n",
"Tree:     ", round(difftime(d,c, units = "mins"),2),"\n",
"Bagged:   ", round(difftime(e,d, units = "mins"),2),"\n",
"RF:       ", round(difftime(f,e, units = "mins"),2),"\n",
"SVM:      ", round(difftime(g,f, units = "mins"),2),"\n",
"Total:    ", round(difftime(g,a, units = "mins"),2),"\n"))
base <- "#1f83b4"
#transaktioner generelt
bATM %>% group_by(weekday) %>% summarize(n=n()) %>% ggplot(aes(weekday,n)) + geom_col(color = base, fill = base) + labs(title="Amount of withdraws for each weekday")
bATM %>% group_by(month) %>% summarize(n=n()) %>% ggplot(aes(month,n)) + geom_col(color = base, fill = base) + labs(title="Amount of withdraws per month")
bATM %>% group_by(day) %>% summarize(n=n()) %>% ggplot(aes(day,n)) + geom_col(color = base, fill = base) + labs(title="Amount of withdraws per day")
bATM %>% group_by(hour) %>% summarize(n=n()) %>% ggplot(aes(hour,n)) + geom_col(color = base, fill = base) + labs(title="Amount of withdraws per day")
#Ovenstående plots illustrerer fordelingen af alle transaktioner på hhv. de forskellige måneder, ugedage, dage på måneden og timer.
#The first 4 plots shows the amount of withdraws destributed on weekday, month, day and hour. We can see a pattern in the plots, where there is about 20.000 withdraws each month, except from the summer months 'May','June' and'July' where there is about 25.000 withdraws. This could be explained by the fact that people are more likely to take on vacation in these months. Further it can be seen that people are more likely to make a withdraw in the beginning of the month, where we can see that amount of withdraws is highest on the 1st of the month, and right before the weekend, where friday is the day with the highest amount of withdraws.
bATM %>% filter(currency == "EUR") %>% group_by(weekday) %>% summarize(n=n()) %>% ggplot(aes(weekday,n)) + geom_col(color = base, fill = base) + labs(title="Amount of euro-withdraws for each weekday")
bATM %>% filter(currency == "EUR") %>% group_by(month) %>% summarize(n=n()) %>% ggplot(aes(month,n)) + geom_col(color = base, fill = base) + labs(title="Amount of euro-withdraws per month")
bATM %>% filter(currency == "EUR") %>% group_by(day) %>% summarize(n=n()) %>% ggplot(aes(day,n)) + geom_col(color = base, fill = base) + labs(title="Amount of euro-withdraws per day")
bATM %>% filter(currency == "EUR") %>% group_by(hour) %>% summarize(n=n()) %>% ggplot(aes(hour,n)) + geom_col(color = base, fill = base) + labs(title="Amount of euro-withdraws per hour")
#The plots shows the amount of the euro-transactions destributed on weekday, month, day and hour. We can see from the euro-month plot that people are more likely to withdraw euros in the summermonth July. This may be due to more people are going on vacations in the holiday-months like july. And like the case before we can see that people is slightly more likely to withdraw euros in the days leading up to the weekend and in the beginning of the months.
bATM %>% filter(currency == "EUR") %>% group_by(weekday) %>% summarize(n=n()) %>% ggplot(aes(weekday,n)) + geom_col(color = base, fill = base) + labs(title="Amount of euro-withdraws for each weekday")
bATM %>% filter(currency == "EUR") %>% group_by(month) %>% summarize(n=n()) %>% ggplot(aes(month,n)) + geom_col(color = base, fill = base) + labs(title="Amount of euro-withdraws per month")
bATM %>% filter(currency == "EUR") %>% group_by(day) %>% summarize(n=n()) %>% ggplot(aes(day,n)) + geom_col(color = base, fill = base) + labs(title="Amount of euro-withdraws per day")
bATM %>% filter(currency == "EUR") %>% group_by(hour) %>% summarize(n=n()) %>% ggplot(aes(hour,n)) + geom_col(color = base, fill = base) + labs(title="Amount of euro-withdraws per hour")
s5 <- bATM %>% filter(currency == "EUR") %>% group_by(weekday) %>% summarize(n=n()) %>% ggplot(aes(weekday,n)) + geom_col(color = base, fill = base) + labs(title="Amount of euro-withdraws for each weekday")
s6 <- bATM %>% filter(currency == "EUR") %>% group_by(month) %>% summarize(n=n()) %>% ggplot(aes(month,n)) + geom_col(color = base, fill = base) + labs(title="Amount of euro-withdraws per month")
s7 <- bATM %>% filter(currency == "EUR") %>% group_by(day) %>% summarize(n=n()) %>% ggplot(aes(day,n)) + geom_col(color = base, fill = base) +
labs(title="Amount of euro-withdraws per day")
s8 <- bATM %>% filter(currency == "EUR") %>% group_by(hour) %>% summarize(n=n()) %>% ggplot(aes(hour,n)) + geom_col(color = base, fill = base) + labs(title="Amount of euro-withdraws per hour")
#The plots shows the amount of the euro-transactions destributed on weekday, month, day and hour. We can see from the euro-month plot that people are more likely to withdraw euros in the summermonth July. This may be due to more people are going on vacations in the holiday-months like july. And like the case before we can see that people is slightly more likely to withdraw euros in the days leading up to the weekend and in the beginning of the months.
grid.arrange(s5,s6,s7,s8, nrow=1)
s1 <- bATM %>% group_by(month) %>% summarize(n=n()/1000) %>%
ggplot(aes(month,n))   + geom_col(fill=base, width=0.8)     +
labs(title = "By month") +
theme(axis.text.x = element_text(angle = 90, vjust=-0.1))
s2 <- bATM %>% group_by(day) %>% summarize(n=n()/1000) %>%
ggplot(aes(day,n)) + geom_col(fill=base, color=base)         +
labs(title = "By day")
s3 <- bATM %>% group_by(weekday) %>% summarize(n=n()/1000) %>%
ggplot(aes(weekday,n)) + geom_col(fill=base, width=0.8) +
labs(title = "By weekday") +
theme(axis.text.x = element_text(angle = 90, vjust=-0.1))
s4 <- bATM %>% group_by(hour) %>% summarize(n=n()/1000) %>%
ggplot(aes(hour,n))    + geom_col(fill=base, color=base)       +
labs(title = "By hour") +
scale_x_continuous(breaks=c(0,3,6,9,12,15,18,21,24))
grid.arrange(s1,s3,s2,s4, nrow=1)
#Ovenstående plots illustrerer fordelingen af alle transaktioner på hhv. de forskellige måneder, ugedage, dage på måneden og timer.
#The first 4 plots shows the amount of withdraws destributed on weekday, month, day and hour. We can see a pattern in the plots, where there is about 20.000 withdraws each month, except from the summer months 'May','June' and'July' where there is about 25.000 withdraws. This could be explained by the fact that people are more likely to take on vacation in these months. Further it can be seen that people are more likely to make a withdraw in the beginning of the month, where we can see that amount of withdraws is highest on the 1st of the month, and right before the weekend, where friday is the day with the highest amount of withdraws.
s5 <- bATM %>% filter(currency == "EUR") %>% group_by(weekday) %>% summarize(n=n()) %>% ggplot(aes(weekday,n)) + geom_col(fill=base, width=0.8)  + labs(title="Amount of euro-withdraws for each weekday")
s6 <- bATM %>% filter(currency == "EUR") %>% group_by(month) %>% summarize(n=n()) %>% ggplot(aes(month,n)) + geom_col(color = base, fill = base) + labs(title="Amount of euro-withdraws per month")
s7 <- bATM %>% filter(currency == "EUR") %>% group_by(day) %>% summarize(n=n()) %>% ggplot(aes(day,n)) + geom_col(color = base, fill = base) +
labs(title="Amount of euro-withdraws per day")
s8 <- bATM %>% filter(currency == "EUR") %>% group_by(hour) %>% summarize(n=n()) %>% ggplot(aes(hour,n)) + geom_col(color = base, fill = base) + labs(title="Amount of euro-withdraws per hour")
#The plots shows the amount of the euro-transactions destributed on weekday, month, day and hour. We can see from the euro-month plot that people are more likely to withdraw euros in the summermonth July. This may be due to more people are going on vacations in the holiday-months like july. And like the case before we can see that people is slightly more likely to withdraw euros in the days leading up to the weekend and in the beginning of the months.
grid.arrange(s5,s6,s7,s8, nrow=1)
s1 <- bATM %>% group_by(month) %>% summarize(n=n()/1000) %>%
ggplot(aes(month,n))   + geom_col(fill=base, width=0.8)     +
labs(title = "By month") +
theme(axis.text.x = element_text(angle = 90, vjust=-0.1))
s2 <- bATM %>% group_by(day) %>% summarize(n=n()/1000) %>%
ggplot(aes(day,n)) + geom_col(fill=base, color=base)         +
labs(title = "By day")
s3 <- bATM %>% group_by(weekday) %>% summarize(n=n()/1000) %>%
ggplot(aes(weekday,n)) + geom_col(fill=base, width=0.8) +
labs(title = "By weekday") +
theme(axis.text.x = element_text(angle = 90, vjust=-0.1))
s4 <- bATM %>% group_by(hour) %>% summarize(n=n()/1000) %>%
ggplot(aes(hour,n))    + geom_col(fill=base, color=base)       +
labs(title = "By hour") +
scale_x_continuous(breaks=c(0,3,6,9,12,15,18,21,24))
grid.arrange(s1,s3,s2,s4, nrow=1)
#Ovenstående plots illustrerer fordelingen af alle transaktioner på hhv. de forskellige måneder, ugedage, dage på måneden og timer.
#The first 4 plots shows the amount of withdraws destributed on weekday, month, day and hour. We can see a pattern in the plots, where there is about 20.000 withdraws each month, except from the summer months 'May','June' and'July' where there is about 25.000 withdraws. This could be explained by the fact that people are more likely to take on vacation in these months. Further it can be seen that people are more likely to make a withdraw in the beginning of the month, where we can see that amount of withdraws is highest on the 1st of the month, and right before the weekend, where friday is the day with the highest amount of withdraws.
s5 <- bATM %>% filter(currency == "EUR") %>% group_by(weekday) %>% summarize(n=n()) %>% ggplot(aes(weekday,n)) + geom_col(fill=base, width=0.8)  + labs(title="Amount of euro-withdraws for each weekday")+
theme(axis.text.x = element_text(angle = 90, vjust=-0.1))
s6 <- bATM %>% filter(currency == "EUR") %>% group_by(month) %>% summarize(n=n()) %>% ggplot(aes(month,n)) + geom_col(fill=base, width=0.8)  + labs(title="Amount of euro-withdraws per month")+
theme(axis.text.x = element_text(angle = 90, vjust=-0.1))
s7 <- bATM %>% filter(currency == "EUR") %>% group_by(day) %>% summarize(n=n()) %>% ggplot(aes(day,n)) + geom_col(color = base, fill = base) +
labs(title="Amount of euro-withdraws per day")
s8 <- bATM %>% filter(currency == "EUR") %>% group_by(hour) %>% summarize(n=n()) %>% ggplot(aes(hour,n)) + geom_col(color = base, fill = base) + labs(title="Amount of euro-withdraws per hour")
#The plots shows the amount of the euro-transactions destributed on weekday, month, day and hour. We can see from the euro-month plot that people are more likely to withdraw euros in the summermonth July. This may be due to more people are going on vacations in the holiday-months like july. And like the case before we can see that people is slightly more likely to withdraw euros in the days leading up to the weekend and in the beginning of the months.
grid.arrange(s6,s5,s7,s8, nrow=1)
s1 <- bATM %>% group_by(month) %>% summarize(n=n()/1000) %>%
ggplot(aes(month,n))   + geom_col(fill=base, width=0.8)     +
labs(title = "By month") +
theme(axis.text.x = element_text(angle = 90, vjust=-0.1))
s2 <- bATM %>% group_by(day) %>% summarize(n=n()/1000) %>%
ggplot(aes(day,n)) + geom_col(fill=base, color=base)         +
labs(title = "By day")
s3 <- bATM %>% group_by(weekday) %>% summarize(n=n()/1000) %>%
ggplot(aes(weekday,n)) + geom_col(fill=base, width=0.8) +
labs(title = "By weekday") +
theme(axis.text.x = element_text(angle = 90, vjust=-0.1))
s4 <- bATM %>% group_by(hour) %>% summarize(n=n()/1000) %>%
ggplot(aes(hour,n))    + geom_col(fill=base, color=base)       +
labs(title = "By hour") +
scale_x_continuous(breaks=c(0,3,6,9,12,15,18,21,24))
grid.arrange(s1,s3,s2,s4, nrow=1)
#Ovenstående plots illustrerer fordelingen af alle transaktioner på hhv. de forskellige måneder, ugedage, dage på måneden og timer.
#The first 4 plots shows the amount of withdraws destributed on weekday, month, day and hour. We can see a pattern in the plots, where there is about 20.000 withdraws each month, except from the summer months 'May','June' and'July' where there is about 25.000 withdraws. This could be explained by the fact that people are more likely to take on vacation in these months. Further it can be seen that people are more likely to make a withdraw in the beginning of the month, where we can see that amount of withdraws is highest on the 1st of the month, and right before the weekend, where friday is the day with the highest amount of withdraws.
s5 <- bATM %>% filter(currency == "EUR") %>% group_by(weekday) %>% summarize(n=n()/1000) %>% ggplot(aes(weekday,n)) + geom_col(fill=base, width=0.8)  + labs(title="By weekday - Euro")+
theme(axis.text.x = element_text(angle = 90, vjust=-0.1))
s6 <- bATM %>% filter(currency == "EUR") %>% group_by(month) %>% summarize(n=n()/1000) %>% ggplot(aes(month,n)) + geom_col(fill=base, width=0.8)  + labs(title="By month - Euro")+
theme(axis.text.x = element_text(angle = 90, vjust=-0.1))
s7 <- bATM %>% filter(currency == "EUR") %>% group_by(day) %>% summarize(n=n()/1000) %>% ggplot(aes(day,n)) + geom_col(color = base, fill = base) +
labs(title="By day - Euro")
s8 <- bATM %>% filter(currency == "EUR") %>% group_by(hour) %>% summarize(n=n()/1000) %>% ggplot(aes(hour,n)) + geom_col(color = base, fill = base) + labs(title="By hour - Euro")
#The plots shows the amount of the euro-transactions destributed on weekday, month, day and hour. We can see from the euro-month plot that people are more likely to withdraw euros in the summermonth July. This may be due to more people are going on vacations in the holiday-months like july. And like the case before we can see that people is slightly more likely to withdraw euros in the days leading up to the weekend and in the beginning of the months.
grid.arrange(s6,s5,s7,s8, nrow=1)
bATM %>% filter(currency =="EUR") %>% group_by(day, month) %>% summarize(n=n()) %>% ggplot(aes(day, n)) + geom_col(fill=base, color=base) + facet_wrap(~month)  + labs(title="The number of withdrawals on each date.")
#The plots shows the amount of euro-withdraws on the specific day in the month. As can be seen from the plot the amount of euro-withdraws increases from the end of june to the end of july Which can be explained by the fact that people are going on vacation and the currency in that country is euro. It seems like people are more likely to withdraw euro in the holiday period.
s1 <- bATM %>% group_by(month) %>% summarize(n=n()/1000) %>%
ggplot(aes(month,n))   + geom_col(fill=base, width=0.8)     +
labs(title = "By month") +
theme(axis.text.x = element_text(angle = 90, vjust=-0.1))
s2 <- bATM %>% group_by(day) %>% summarize(n=n()/1000) %>%
ggplot(aes(day,n)) + geom_col(fill=base, color=base)         +
labs(title = "By day")
s3 <- bATM %>% group_by(weekday) %>% summarize(n=n()/1000) %>%
ggplot(aes(weekday,n)) + geom_col(fill=base, width=0.8) +
labs(title = "By weekday") +
theme(axis.text.x = element_text(angle = 90, vjust=-0.1))
s4 <- bATM %>% group_by(hour) %>% summarize(n=n()/1000) %>%
ggplot(aes(hour,n))    + geom_col(fill=base, color=base)       +
labs(title = "By hour") +
scale_x_continuous(breaks=c(0,3,6,9,12,15,18,21,24))
#Ovenstående plots illustrerer fordelingen af alle transaktioner på hhv. de forskellige måneder, ugedage, dage på måneden og timer.
#The first 4 plots shows the amount of withdraws destributed on weekday, month, day and hour. We can see a pattern in the plots, where there is about 20.000 withdraws each month, except from the summer months 'May','June' and'July' where there is about 25.000 withdraws. This could be explained by the fact that people are more likely to take on vacation in these months. Further it can be seen that people are more likely to make a withdraw in the beginning of the month, where we can see that amount of withdraws is highest on the 1st of the month, and right before the weekend, where friday is the day with the highest amount of withdraws.
s5 <- bATM %>% filter(currency == "EUR") %>% group_by(weekday) %>% summarize(n=n()/1000) %>% ggplot(aes(weekday,n)) + geom_col(fill=base, width=0.8)  + labs(title="By weekday - Euro")+
theme(axis.text.x = element_text(angle = 90, vjust=-0.1))
s6 <- bATM %>% filter(currency == "EUR") %>% group_by(month) %>% summarize(n=n()/1000) %>% ggplot(aes(month,n)) + geom_col(fill=base, width=0.8)  + labs(title="By month - Euro")+
theme(axis.text.x = element_text(angle = 90, vjust=-0.1))
s7 <- bATM %>% filter(currency == "EUR") %>% group_by(day) %>% summarize(n=n()/1000) %>% ggplot(aes(day,n)) + geom_col(color = base, fill = base) +
labs(title="By day - Euro")
s8 <- bATM %>% filter(currency == "EUR") %>% group_by(hour) %>% summarize(n=n()/1000) %>% ggplot(aes(hour,n)) + geom_col(color = base, fill = base) + labs(title="By hour - Euro") +
scale_x_continuous(breaks=c(0,3,6,9,12,15,18,21,24))
#The plots shows the amount of the euro-transactions destributed on weekday, month, day and hour. We can see from the euro-month plot that people are more likely to withdraw euros in the summermonth July. This may be due to more people are going on vacations in the holiday-months like july. And like the case before we can see that people is slightly more likely to withdraw euros in the days leading up to the weekend and in the beginning of the months.
grid.arrange(s1,s3,s2,s4,s6,s5,s7,s8 nrow=2)
grid.arrange(s1,s3,s2,s4,s6,s5,s7,s8, nrow=2)
base2 <- "#12a2a8"
s5 <- bATM %>% filter(currency == "EUR") %>% group_by(weekday) %>% summarize(n=n()/1000) %>% ggplot(aes(weekday,n)) + geom_col(fill=base2, width=0.8)  + labs(title="By weekday - Euro")+
theme(axis.text.x = element_text(angle = 90, vjust=-0.1))
s6 <- bATM %>% filter(currency == "EUR") %>% group_by(month) %>% summarize(n=n()/1000) %>% ggplot(aes(month,n)) + geom_col(fill=base2, width=0.8)  + labs(title="By month - Euro")+
theme(axis.text.x = element_text(angle = 90, vjust=-0.1))
s7 <- bATM %>% filter(currency == "EUR") %>% group_by(day) %>% summarize(n=n()/1000) %>% ggplot(aes(day,n)) + geom_col(color = base2, fill = base) +
labs(title="By day - Euro")
s8 <- bATM %>% filter(currency == "EUR") %>% group_by(hour) %>% summarize(n=n()/1000) %>% ggplot(aes(hour,n)) + geom_col(color = base2, fill = base) + labs(title="By hour - Euro") +
scale_x_continuous(breaks=c(0,3,6,9,12,15,18,21,24))
#The plots shows the amount of the euro-transactions destributed on weekday, month, day and hour. We can see from the euro-month plot that people are more likely to withdraw euros in the summermonth July. This may be due to more people are going on vacations in the holiday-months like july. And like the case before we can see that people is slightly more likely to withdraw euros in the days leading up to the weekend and in the beginning of the months.
grid.arrange(s1,s3,s2,s4,s6,s5,s7,s8, nrow=2)
s5 <- bATM %>% filter(currency == "EUR") %>% group_by(weekday) %>% summarize(n=n()/1000) %>% ggplot(aes(weekday,n)) + geom_col(fill=base2, width=0.8)  + labs(title="By weekday - Euro")+
theme(axis.text.x = element_text(angle = 90, vjust=-0.1))
s6 <- bATM %>% filter(currency == "EUR") %>% group_by(month) %>% summarize(n=n()/1000) %>% ggplot(aes(month,n)) + geom_col(fill=base2, width=0.8)  + labs(title="By month - Euro")+
theme(axis.text.x = element_text(angle = 90, vjust=-0.1))
s7 <- bATM %>% filter(currency == "EUR") %>% group_by(day) %>% summarize(n=n()/1000) %>% ggplot(aes(day,n)) + geom_col(color = base2, fill = base2) +
labs(title="By day - Euro")
s8 <- bATM %>% filter(currency == "EUR") %>% group_by(hour) %>% summarize(n=n()/1000) %>% ggplot(aes(hour,n)) + geom_col(color = base2, fill = base2) + labs(title="By hour - Euro") +
scale_x_continuous(breaks=c(0,3,6,9,12,15,18,21,24))
#The plots shows the amount of the euro-transactions destributed on weekday, month, day and hour. We can see from the euro-month plot that people are more likely to withdraw euros in the summermonth July. This may be due to more people are going on vacations in the holiday-months like july. And like the case before we can see that people is slightly more likely to withdraw euros in the days leading up to the weekend and in the beginning of the months.
grid.arrange(s1,s3,s2,s4,s6,s5,s7,s8, nrow=2)
bATM %>% filter(currency =="EUR") %>% group_by(day, month) %>% summarize(n=n()) %>% ggplot(aes(day, n)) + geom_col(fill=base, color=base) + facet_wrap(~month)  + labs(title="The number of withdrawals on each date.")
#The plots shows the amount of euro-withdraws on the specific day in the month. As can be seen from the plot the amount of euro-withdraws increases from the end of june to the end of july Which can be explained by the fact that people are going on vacation and the currency in that country is euro. It seems like people are more likely to withdraw euro in the holiday period.
bATM %>% filter(currency =="EUR") %>% group_by(day, month) %>% summarize(n=n()) %>% ggplot(aes(day, n)) + geom_col(fill=base, color=base) + facet_wrap(~month)  + labs(title="The number of withdrawals on each date.")
#The plots shows the amount of euro-withdraws on the specific day in the month. As can be seen from the plot the amount of euro-withdraws increases from the end of june to the end of july Which can be explained by the fact that people are going on vacation and the currency in that country is euro. It seems like people are more likely to withdraw euro in the holiday period.
#Euro/Holiday
fdata %>% filter(Euro == "TRUE") %>% group_by(Holliday) %>% summarize(n=n())
fdata %>% filter(Euro == "TRUE") %>% group_by(Holliday) %>% summarize(n=n()) %>% ggplot(aes(Holliday,n)) + geom_col(fill=base) + labs(title="The amount of euro-withdraws in and outside the holiday") + geom_text(aes(y=n-5000,label=round(n,2)), color="white")
fdata %>% group_by(Holliday, Euro) %>% summarize(n=n()) %>% mutate(freq = n/sum(n)) %>% filter(Euro==T) %>%
ggplot(aes(reorder(Holliday,freq),freq)) + geom_col(fill=base) + labs(title="Euro withdraws as a percent of all the withdraws in and outside the holiday") + geom_text(aes(y=freq + 0.002,label=round(freq*100,2)))
# As we can see there is total 16.965 euro-withdraws in the Holiday, and 29.474 not-euro-withdraws and therefore an overweight of not-euro-withdraws in the holiday. The plot shows that 2.49% of the withdraws in the holiday is euro-withdraws, where 1.65% of the withdraws outside of the holiday is euro-withdraws. So it seems like people are more likely to do euro-withdraws in the holiday than outside the holiday. This can be explained by the fact that people want to have some euros in cash if they are going on a vacation in Europe.
#Euro/Holiday
fdata %>% filter(Euro == "TRUE") %>% group_by(Holliday) %>% summarize(n=n())
fdata %>% filter(Euro == "TRUE") %>% group_by(Holliday) %>% summarize(n=n()) %>% ggplot(aes(Holliday,n)) + geom_col(fill=base) + labs(title="The amount of euro-withdraws in and outside the holiday") + geom_text(aes(y=n-5000,label=round(n,2)), color="white")
fdata %>% group_by(Holliday, Euro) %>% summarize(n=n()) %>% mutate(freq = n/sum(n)) %>% filter(Euro==T) %>%
ggplot(aes(reorder(Holliday,freq),freq)) + geom_col(fill=base) + labs(title="Euro withdraws as a percent of all the withdraws in and outside the holiday") + geom_text(aes(y=freq + 0.002,label=round(freq*100,2)))
# As we can see there is total 16.965 euro-withdraws in the Holiday, and 29.474 not-euro-withdraws and therefore an overweight of not-euro-withdraws in the holiday. The plot shows that 2.49% of the withdraws in the holiday is euro-withdraws, where 1.65% of the withdraws outside of the holiday is euro-withdraws. So it seems like people are more likely to do euro-withdraws in the holiday than outside the holiday. This can be explained by the fact that people want to have some euros in cash if they are going on a vacation in Europe.
#Euro/Holiday
#fdata %>% filter(Euro == "TRUE") %>% group_by(Holliday) %>% summarize(n=n())
a1 <- fdata %>% filter(Euro == "TRUE") %>% group_by(Holliday) %>% summarize(n=n()) %>% ggplot(aes(Holliday,n)) + geom_col(fill=base) + labs(title="The amount of euro-withdraws in and outside the holiday") + geom_text(aes(y=n-5000,label=round(n,2)), color="white")
a2 <- fdata %>% group_by(Holliday, Euro) %>% summarize(n=n()) %>% mutate(freq = n/sum(n)) %>% filter(Euro==T) %>%
ggplot(aes(reorder(Holliday,freq),freq)) + geom_col(fill=base) + labs(title="Euro withdraws as a percent of all the withdraws in and outside the holiday") + geom_text(aes(y=freq + 0.002,label=round(freq*100,2)))
# As we can see there is total 16.965 euro-withdraws in the Holiday, and 29.474 not-euro-withdraws and therefore an overweight of not-euro-withdraws in the holiday. The plot shows that 2.49% of the withdraws in the holiday is euro-withdraws, where 1.65% of the withdraws outside of the holiday is euro-withdraws. So it seems like people are more likely to do euro-withdraws in the holiday than outside the holiday. This can be explained by the fact that people want to have some euros in cash if they are going on a vacation in Europe.
grid.arrange(a1,a2)
# As we can see there is total 16.965 euro-withdraws in the Holiday, and 29.474 not-euro-withdraws and therefore an overweight of not-euro-withdraws in the holiday. The plot shows that 2.49% of the withdraws in the holiday is euro-withdraws, where 1.65% of the withdraws outside of the holiday is euro-withdraws. So it seems like people are more likely to do euro-withdraws in the holiday than outside the holiday. This can be explained by the fact that people want to have some euros in cash if they are going on a vacation in Europe.
grid.arrange(a1,a2, nrow=1)
#Euro/Holiday
#fdata %>% filter(Euro == "TRUE") %>% group_by(Holliday) %>% summarize(n=n())
a1 <- fdata %>% filter(Euro == "TRUE") %>% group_by(Holliday) %>% summarize(n=n()) %>% ggplot(aes(Holliday,n)) + geom_col(fill=base) + labs(title="The amount of euro-withdraws in and outside the holiday") + geom_text(aes(y=n-5000,label=round(n,2)), color="white")
a2 <- fdata %>% group_by(Holliday, Euro) %>% summarize(n=n()) %>% mutate(freq = n/sum(n)) %>% filter(Euro==T) %>%
ggplot(aes(reorder(Holliday,freq),freq)) + geom_col(fill=base) + labs(title="Euro withdraws as a percent of all the withdraws in and outside the holiday") + geom_text(aes(y=freq + 0.002,label=round(freq*100,2)))
# As we can see there is total 16.965 euro-withdraws in the Holiday, and 29.474 not-euro-withdraws and therefore an overweight of not-euro-withdraws in the holiday. The plot shows that 2.49% of the withdraws in the holiday is euro-withdraws, where 1.65% of the withdraws outside of the holiday is euro-withdraws. So it seems like people are more likely to do euro-withdraws in the holiday than outside the holiday. This can be explained by the fact that people want to have some euros in cash if they are going on a vacation in Europe.
grid.arrange(a1,a2, nrow=1)
#Euro/Holiday
#fdata %>% filter(Euro == "TRUE") %>% group_by(Holliday) %>% summarize(n=n())
a1 <- fdata %>% filter(Euro == "TRUE") %>% group_by(Holliday) %>% summarize(n=n()) %>% ggplot(aes(Holliday,n)) + geom_col(fill=base) + labs(title="Euro withdraws in the holiday") + geom_text(aes(y=n-5000,label=round(n,2)), color="white")
a2 <- fdata %>% group_by(Holliday, Euro) %>% summarize(n=n()) %>% mutate(freq = n/sum(n)) %>% filter(Euro==T) %>%
ggplot(aes(reorder(Holliday,freq),freq)) + geom_col(fill=base) + labs(title="Euro withdraws as a percent of all the withdraws in the holiday") + geom_text(aes(y=freq + 0.002,label=round(freq*100,2)))
# As we can see there is total 16.965 euro-withdraws in the Holiday, and 29.474 not-euro-withdraws and therefore an overweight of not-euro-withdraws in the holiday. The plot shows that 2.49% of the withdraws in the holiday is euro-withdraws, where 1.65% of the withdraws outside of the holiday is euro-withdraws. So it seems like people are more likely to do euro-withdraws in the holiday than outside the holiday. This can be explained by the fact that people want to have some euros in cash if they are going on a vacation in Europe.
grid.arrange(a1,a2, nrow=1)
a2 <- fdata %>% group_by(Holliday, Euro) %>% summarize(n=n()) %>% mutate(freq = n/sum(n)) %>% filter(Euro==T) %>%
ggplot(aes(reorder(Holliday,freq),freq)) + geom_col(fill=base) + labs(title="Euro withdraws as a percentage in the holiday") + geom_text(aes(y=freq + 0.002,label=round(freq*100,2)))
# As we can see there is total 16.965 euro-withdraws in the Holiday, and 29.474 not-euro-withdraws and therefore an overweight of not-euro-withdraws in the holiday. The plot shows that 2.49% of the withdraws in the holiday is euro-withdraws, where 1.65% of the withdraws outside of the holiday is euro-withdraws. So it seems like people are more likely to do euro-withdraws in the holiday than outside the holiday. This can be explained by the fact that people want to have some euros in cash if they are going on a vacation in Europe.
grid.arrange(a1,a2, nrow=1)
#fdata
ggplot(fdata, aes(x=fdata$Airportdist)) + geom_histogram(binwidth=3, col = base, fill = base) + labs(title="Histogram of the amount of withdraws per  ATM w. distance the ATMs nearest airport")
ggplot(fdata, aes(x=fdata$Airportdist, stat(density))) + geom_histogram(binwidth=3, col = base, fill = base) +
facet_wrap(~Euro, nrow=2) + labs(title="Histogram of ATMs distance to airport w. density euro-withdraws or not")
#These plots illustrates the relationship between euro and the distance to the nearest airport. The first one shows a Histogram of the amount of withdraws per  ATM w. distance the ATMs nearest airport, where the second shows the same but only with euro-withdraws. You could emagine that people who are going on vacation would use the ATMs close to the airport when they need euros. As you can see from the last plot, which plots the density of Airportdistance and euro, nearly 20% of the euro-transactions is made in the ATM which is closest to the airport, and after that there seems to be a downward trend in the density.
#fdata
a3 <- ggplot(fdata, aes(x=fdata$Airportdist)) + geom_histogram(binwidth=3, col = base, fill = base) + labs(title="Histogram of withdraws avg. distance to airport")
a4 <- ggplot(fdata, aes(x=fdata$Airportdist, stat(density))) + geom_histogram(binwidth=3, col = base, fill = base) +
facet_wrap(~Euro, nrow=2) + labs(title="Histogram of withdraws avg. distance to airport by currency")
#These plots illustrates the relationship between euro and the distance to the nearest airport. The first one shows a Histogram of the amount of withdraws per  ATM w. distance the ATMs nearest airport, where the second shows the same but only with euro-withdraws. You could emagine that people who are going on vacation would use the ATMs close to the airport when they need euros. As you can see from the last plot, which plots the density of Airportdistance and euro, nearly 20% of the euro-transactions is made in the ATM which is closest to the airport, and after that there seems to be a downward trend in the density.
grid.arrange(a3,a4)
#fdata
a3 <- ggplot(fdata, aes(x=fdata$Airportdist)) + geom_histogram(binwidth=3, col = base, fill = base) + labs(title="Histogram of withdraws avg. distance to airport")
a4 <- ggplot(fdata, aes(x=fdata$Airportdist, stat(density))) + geom_histogram(binwidth=3, col = base, fill = base) +
facet_wrap(~Euro, nrow=2) + labs(title="Histogram of withdraws avg. distance to airport by currency")
#These plots illustrates the relationship between euro and the distance to the nearest airport. The first one shows a Histogram of the amount of withdraws per  ATM w. distance the ATMs nearest airport, where the second shows the same but only with euro-withdraws. You could emagine that people who are going on vacation would use the ATMs close to the airport when they need euros. As you can see from the last plot, which plots the density of Airportdistance and euro, nearly 20% of the euro-transactions is made in the ATM which is closest to the airport, and after that there seems to be a downward trend in the density.
grid.arrange(a3,a4)
grid.arrange(a3,a4, nrow=1)
#Euro/Region
fdata %>% group_by(Region, Euro) %>% summarize(n=n()) %>% mutate(freq = n/sum(n)) %>% filter(Euro==T) %>%
ggplot(aes(reorder(Region,freq),freq)) + geom_col(fill=base) + labs(title="The amount of withdraws by each region") + geom_text(aes(y=freq + 0.002,label=round(freq*100,2)))
#It seems like Region Sjælland and Region Midtjylland are more likely to withdraw euro than the rest of Denmark. 3.27% of the transactions in Region Sjælland are euro-withdraw and 2.99% in Region Midtjylland. The numbers for Region Syddanmark, Hovedstaden and Nordjylland is 2.13%, 1.55% and 1.43%. This could for example be explained by the fact that there are some bigger airports in Region Midtjylland and Region Sjælland, with more flights and some other destination than for example Aalborg airport.
#Euro/Region
fdata %>% group_by(Region, Euro) %>% summarize(n=n()) %>% mutate(freq = n/sum(n)) %>% filter(Euro==T) %>%
ggplot(aes(reorder(Region,freq),freq)) + geom_col(fill=base) + labs(title="The amount of withdraws by each region") + geom_text(aes(y=freq + 0.002,label=round(freq*100,2)))
#Euro/Region
fdata %>% group_by(Region, Euro) %>% summarize(n=n()) %>% mutate(freq = n/sum(n)) %>% filter(Euro==T) %>%
ggplot(aes(reorder(Region,freq),freq)) + geom_col(fill=base) + labs(title="The amount of Euro withdraws by each region", x="") + geom_text(aes(y=freq + 0.002,label=round(freq*100,2)))
#Customer/Euro
fdata %>% group_by(Customer, Euro) %>% summarize(n=n()) %>% mutate(freq = n/sum(n)) %>% filter(Euro==T) %>%
ggplot(aes(Customer,freq)) + geom_col(fill=base) + labs(title="Customer or not") + geom_text(aes(y=freq + 0.002,label=round(freq*100,2)))
#Weekend/Euro
fdata %>% group_by(Weekend, Euro) %>% summarize(n=n()) %>% mutate(freq = n/sum(n)) %>% filter(Euro==T) %>%
ggplot(aes(Weekend,freq)) + geom_col(fill=base) + labs(title="Weekend or not") + geom_text(aes(y=freq + 0.002,label=round(freq*100,2)))
# The plot shows that 1.27% of the euro-withdraws are made in the 'Weekend', while 2.06% are made outside the weekend. It seems like people are more likely to made euro-withdraws in the weekdays than in the weekend.
#Payout/Euro
fdata %>% group_by(Payout, Euro) %>% summarize(n=n()) %>% mutate(freq = n/sum(n)) %>% filter(Euro==T) %>%
ggplot(aes(Payout,freq)) + geom_col(fill=base) + labs(title="Payout or not") + geom_text(aes(y=freq + 0.002,label=round(freq*100,2)))
# The plot shows that 1.65% of the euro-withdraws are in the payout-period, while 1.99% of the euro-withdraws are in the not-payout-period. This indicates that there is no trend between the payout-period and the euro-withdraws.
fdata %>% group_by(Card, Euro) %>% summarize(n=n()) %>% mutate(freq = n/sum(n)) %>% filter(Euro==T) %>%
ggplot(aes(reorder(Card,freq),freq)) + geom_col(fill=base) + labs(title="Euro-withdraws as percent of all the trans") + geom_text(aes(y=freq + 0.002,label=round(freq*100,2)))
# The plot shows which cardtype that often has a euro-withdraw, as can be seen it's the 'Visa Dankort' which has the highest frequency of euro-withdraws. The plot shows that 3.15% of the withdraws in 'Visa Dankort' is euro-withdraws.
#Customer/Euro
a5 <- fdata %>% group_by(Customer, Euro) %>% summarize(n=n()) %>% mutate(freq = n/sum(n)) %>% filter(Euro==T) %>%
ggplot(aes(Customer,freq)) + geom_col(fill=base) + labs(title="Customer or not") + geom_text(aes(y=freq + 0.002,label=round(freq*100,2)))
#Weekend/Euro
a6 <- fdata %>% group_by(Weekend, Euro) %>% summarize(n=n()) %>% mutate(freq = n/sum(n)) %>% filter(Euro==T) %>%
ggplot(aes(Weekend,freq)) + geom_col(fill=base) + labs(title="Weekend or not") + geom_text(aes(y=freq + 0.002,label=round(freq*100,2)))
#Payout/Euro
a7 <- fdata %>% group_by(Payout, Euro) %>% summarize(n=n()) %>% mutate(freq = n/sum(n)) %>% filter(Euro==T) %>%
ggplot(aes(Payout,freq)) + geom_col(fill=base) + labs(title="Payout or not") + geom_text(aes(y=freq + 0.002,label=round(freq*100,2)))
grid.arrange(a5,a6,a7)
grid.arrange(a5,a6,a7, nrow=1)
fdata %>% group_by(Card, Euro) %>% summarize(n=n()) %>% mutate(freq = n/sum(n)) %>% filter(Euro==T) %>%
ggplot(aes(reorder(Card,freq),freq)) + geom_col(fill=base) + labs(title="Euro-withdraws as percent of all the trans") + geom_text(aes(y=freq + 0.002,label=round(freq*100,2)))
#Euro/Holiday
#fdata %>% filter(Euro == "TRUE") %>% group_by(Holliday) %>% summarize(n=n())
a1 <- fdata %>% filter(Euro == "TRUE") %>% group_by(Holliday) %>% summarize(n=n()) %>% ggplot(aes(Holliday,n)) + geom_col(fill=base) + labs(title="Euro withdraws in the holiday") + geom_text(aes(y=n+2500,label=round(n,2)), color="white") + scale_y_continuous(limits = c(0,35000))
#
grid.arrange(a1,a2, nrow=1)
#Euro/Holiday
#fdata %>% filter(Euro == "TRUE") %>% group_by(Holliday) %>% summarize(n=n())
a1 <- fdata %>% filter(Euro == "TRUE") %>% group_by(Holliday) %>% summarize(n=n()) %>% ggplot(aes(Holliday,n)) + geom_col(fill=base) + labs(title="Euro withdraws in the holiday") + geom_text(aes(y=n+2500,label=round(n,2))) + scale_y_continuous(limits = c(0,35000))
a2 <- fdata %>% group_by(Holliday, Euro) %>% summarize(n=n()) %>% mutate(freq = n/sum(n)) %>% filter(Euro==T) %>%
ggplot(aes(reorder(Holliday,freq),freq)) + geom_col(fill=base) + labs(title="Euro withdraws as a percentage in the holiday") + geom_text(aes(y=freq + 0.002,label=round(freq*100,2)))
a2 <- fdata %>% group_by(Holliday, Euro) %>% summarize(n=n()) %>% mutate(freq = n/sum(n)) %>% filter(Euro==T) %>%
ggplot(aes(reorder(Holliday,freq),freq)) + geom_col(fill=base) + labs(title="Euro withdraws as a percentage in the holiday") + geom_text(aes(y=freq + 0.002,label=round(freq*100,2)))
#
grid.arrange(a1,a2, nrow=1)
a2 <- fdata %>% group_by(Holliday, Euro) %>% summarize(n=n()) %>% mutate(freq = n/sum(n)) %>% filter(Euro==T) %>%
ggplot(aes(reorder(Holliday,freq),freq)) + geom_col(fill=base) + labs(title="Holiday") + geom_text(aes(y=freq + 0.002,label=round(freq*100,2)))
#Customer/Euro
a5 <- fdata %>% group_by(Customer, Euro) %>% summarize(n=n()) %>% mutate(freq = n/sum(n)) %>% filter(Euro==T) %>%
ggplot(aes(Customer,freq)) + geom_col(fill=base) + labs(title="Customer") + geom_text(aes(y=freq + 0.002,label=round(freq*100,2)))
#Weekend/Euro
a6 <- fdata %>% group_by(Weekend, Euro) %>% summarize(n=n()) %>% mutate(freq = n/sum(n)) %>% filter(Euro==T) %>%
ggplot(aes(Weekend,freq)) + geom_col(fill=base) + labs(title="Weekend") + geom_text(aes(y=freq + 0.002,label=round(freq*100,2)))
#Payout/Euro
a7 <- fdata %>% group_by(Payout, Euro) %>% summarize(n=n()) %>% mutate(freq = n/sum(n)) %>% filter(Euro==T) %>%
ggplot(aes(Payout,freq)) + geom_col(fill=base) + labs(title="Payout") + geom_text(aes(y=freq + 0.002,label=round(freq*100,2)))
grid.arrange(a2, a5,a6,a7, nrow=1)
a2 <- fdata %>% group_by(Holliday, Euro) %>% summarize(n=n()) %>% mutate(freq = n/sum(n)) %>% filter(Euro==T) %>%
ggplot(aes(reorder(Holliday,freq),freq)) + geom_col(fill=base) + labs(title="Holiday", x="") + geom_text(aes(y=freq + 0.002,label=round(freq*100,2)))
#Customer/Euro
a5 <- fdata %>% group_by(Customer, Euro) %>% summarize(n=n()) %>% mutate(freq = n/sum(n)) %>% filter(Euro==T) %>%
ggplot(aes(Customer,freq)) + geom_col(fill=base) + labs(title="Customer", x="") + geom_text(aes(y=freq + 0.002,label=round(freq*100,2)))
#Weekend/Euro
a6 <- fdata %>% group_by(Weekend, Euro) %>% summarize(n=n()) %>% mutate(freq = n/sum(n)) %>% filter(Euro==T) %>%
ggplot(aes(Weekend,freq)) + geom_col(fill=base) + labs(title="Weekend", x="") + geom_text(aes(y=freq + 0.002,label=round(freq*100,2)))
#Payout/Euro
a7 <- fdata %>% group_by(Payout, Euro) %>% summarize(n=n()) %>% mutate(freq = n/sum(n)) %>% filter(Euro==T) %>%
ggplot(aes(Payout,freq)) + geom_col(fill=base) + labs(title="Payout", x="") + geom_text(aes(y=freq + 0.002,label=round(freq*100,2)))
grid.arrange(a2, a5,a6,a7, nrow=1)
fdata %>% group_by(Region) %>% summarise(N=n()) %>% t() %>% kable() %>% kable_styling("condensed", "bordered")
fbATM %>%
group_by(Euro) %>%
summarize(MeanDistance = mean(Airportdist)) %>% kable %>% kable_styling("condensed", "bordered")
table(fbATM$Euro, fbATM$Id) %>%
prop.table(margin=2) %>%
as.data.frame %>%
filter(Var1==T) %>%
ggplot(aes(reorder(Var2, Freq), Freq)) +
geom_col(fill=base, color=base) +
labs(x="ATM id", legend="Euro", title="Percentage of EURO transactions by each ATM machine",
subtitle="Machine 99 has almost 50% Euro transactions, but it's an internal ATM") +
theme(axis.text.x=element_text(size=4))
bATM %>% filter(currency =="EUR") %>% group_by(day, month) %>% summarize(n=n()) %>% ggplot(aes(day, n)) + geom_col(fill=base, color=base) + facet_wrap(~month)  + labs(title="The number of Euro withdrawals on each date", subtitle="We see how the summer is an active period, while january is almost empty")
install.packages("ROSE")
# simple undersampling  ---------------------------------------------------
load(file="generated_data/fdata.Rdata")
#Downsampling is done by adding sampling="down" in trainControl
#This time the entire dataset with features is used (fdata)
ml <- fdata
ml$Euro <- as.factor(ifelse(ml$Euro == "TRUE", "Yes", "No"))
index    <- createDataPartition(ml$Euro, p = 0.75, list = FALSE)
training <- ml[index,]
test     <- ml[-index,]
sub<-ovun.sample(Euro ~ ., data = training, p=0.5, method="under", seed = 1)$data
library(ROSE)
sub<-ovun.sample(Euro ~ ., data = training, p=0.5, method="under", seed = 1)$data
sub2 <- sample_n(sub, 20000)
sub3 <- sample_n(sub, 5000)
sub4 <- sample_n(sub, 100)
a <- Sys.time()
fit_log <- train(Euro ~ .,
data      = sub3,
trControl = cv,
method    = "glm",
family    = "binomial",
metric    = 'Accuracy')
b <- Sys.time()
fit_ela <- train(Euro ~ .,
data      = sub3,
trControl = cv,
tuneGrid  = expand.grid(alpha  = seq(0, 1, by = 0.2),
lambda = 10^seq(1, -4, by = -1)),
method    = "glmnet",
family    = "binomial",
metric    = 'Accuracy')
c <- Sys.time()
fit_tre <- train(Euro ~ .,
data      = sub3,
trControl = cv,
metric    = "Kappa",
method    = "rpart",
tuneGrid  = expand.grid(cp = c(0.001, 0.005)))
d <- Sys.time()
fit_bag <- train(Euro ~ .,
data      = sub3,
method    = "treebag",
nbagg     = 50,
metric    = "ROC",
trControl = trainControl(method = "cv", number = 5, classProbs = T))
e <- Sys.time()
fit_raf <- train(Euro ~ .,
data      = sub3,
trControl = cv,
.mtry     = 6,
ntree     = 100,
method    = 'rf',
metric    = 'Accuracy')
f <- Sys.time()
fit_svm <- train(Euro ~ .,
data      = sub4,
trControl = cv,
tuneGrid  = expand.grid(C = 10^seq(1, -1, by = -0.02)),
method    = 'svmLinear',
metric    = 'Accuracy')
g<- Sys.time()
conf_log <- table(predict(fit_log,  test), test$Euro)
conf_log
conf_tre <- table(predict(fit_tre,  test), test$Euro)
conf_tre
conf_ela <- table(predict(fit_ela,  test), test$Euro)
conf_ela
conf_bag <- table(predict(fit_bag,  test), test$Euro)
conf_bag
conf_raf <- table(predict(fit_raf,  test), test$Euro)
conf_raf
conf_svm <- table(predict(fit_svm,  test), test$Euro)
conf_svm
cat(paste0("Logistic: ", round(difftime(b,a, units = "mins"),2),"\n",
"Elastic:  ", round(difftime(c,b, units = "mins"),2),"\n",
"Tree:     ", round(difftime(d,c, units = "mins"),2),"\n",
"Bagged:   ", round(difftime(e,d, units = "mins"),2),"\n",
"RF:       ", round(difftime(f,e, units = "mins"),2),"\n",
"SVM:      ", round(difftime(g,f, units = "mins"),2),"\n",
"Total:    ", round(difftime(g,a, units = "mins"),2),"\n"))
random   <- rbinom(n = length(test$Euro), size = 1, prob = mean(training$Euro=="Yes"))
conf_ran <- table(as.factor(if_else(random == 1, "Yes", "No")), test$Euro)
#confusionMatrix(table(conf_dt3, x_test3$Euro))
raf <- rbind(spec(conf_raf), precision(conf_raf), accuracy(conf_raf), recall(conf_raf), npv(conf_raf))
ela <- rbind(spec(conf_ela), precision(conf_ela), accuracy(conf_ela), recall(conf_ela), npv(conf_ela))
dt <- rbind(spec(conf_tre), precision(conf_tre), accuracy(conf_tre), recall(conf_tre), npv(conf_tre))
log <- rbind(spec(conf_log), precision(conf_log), accuracy(conf_log), recall(conf_log), npv(conf_log))
bag <- rbind(spec(conf_bag), precision(conf_bag), accuracy(conf_bag), recall(conf_bag), npv(conf_bag))
ran <- rbind(spec(conf_ran), precision(conf_ran), accuracy(conf_ran), recall(conf_ran), npv(conf_ran))
svm <- rbind(spec(conf_svm), precision(conf_svm), accuracy(conf_svm), recall(conf_svm), npv(conf_svm))
bag$model <- "Bagged Tree"
dt$model <- "Classification Tree"
raf$model <- "Random Forrest"
log$model <- "Logistic Regression"
ela$model <- "Elastic Net Regression"
ran$model <- "Random Assignment"
svm$model <- "Support Vector Machines"
#df <- rbind(log, lok, ran, net, raf, svm)
df <- rbind( log, dt, bag, svm, raf, ran, ela)
ggplot(df, aes(.metric, .estimate, fill = reorder(model, desc(.estimate)))) +
geom_col(position="dodge", width = 0.6) +
scale_fill_tableau(palette = "Miller Stone", type = "regular") +
labs(title="Model performance on predicting Legendary status",
subtitle="Crossvalidated 1/5 split", fill="Predictive Model")
df
df
ggplot(df, aes(.metric, .estimate, fill = reorder(model, desc(.estimate)))) +
geom_col(position="dodge", width = 0.6) +
scale_fill_tableau(palette = "Classic Cyclic", type = "regular") +
labs(title="Model performance on predicting Legendary status",
subtitle="Crossvalidated 1/5 split", fill="Predictive Model")
conf_log <- table(predict(fit_log,  test), test$Euro)
# simple undersampling  ---------------------------------------------------
load(file="generated_data/fdata.Rdata")
#Downsampling is done by adding sampling="down" in trainControl
#This time the entire dataset with features is used (fdata)
ml <- fdata
ml$Euro <- as.factor(ifelse(ml$Euro == "TRUE", "Yes", "No"))
index    <- createDataPartition(ml$Euro, p = 0.75, list = FALSE)
training <- ml[index,]
test     <- ml[-index,]
sub  <- ovun.sample(Euro ~ ., data = training, p=0.5, method="under", seed = 1)$data
sub2 <- sample_n(sub, 20000)
sub3 <- sample_n(sub, 5000)
sub4 <- sample_n(sub, 100)
a <- Sys.time()
fit_log <- train(Euro ~ .,
data      = sub3,
trControl = cv,
method    = "glm",
family    = "binomial",
metric    = 'Accuracy')
b <- Sys.time()
fit_ela <- train(Euro ~ .,
data      = sub3,
trControl = cv,
tuneGrid  = expand.grid(alpha  = seq(0, 1, by = 0.2),
lambda = 10^seq(1, -4, by = -1)),
method    = "glmnet",
family    = "binomial",
metric    = 'Accuracy')
c <- Sys.time()
fit_tre <- train(Euro ~ .,
data      = sub3,
trControl = cv,
metric    = "Kappa",
method    = "rpart",
tuneGrid  = expand.grid(cp = c(0.001, 0.005)))
d <- Sys.time()
fit_bag <- train(Euro ~ .,
data      = sub3,
method    = "treebag",
nbagg     = 25,
metric    = "ROC",
trControl = trainControl(method = "cv", number = 5, classProbs = T))
e <- Sys.time()
fit_raf <- train(Euro ~ .,
data      = sub3,
trControl = cv,
.mtry     = 6,
ntree     = 50,
method    = 'rf',
metric    = 'Accuracy')
f <- Sys.time()
fit_svm <- train(Euro ~ .,
data      = sub4,
trControl = cv,
tuneGrid  = expand.grid(C = 10^seq(1, -1, by = -0.02)),
method    = 'svmLinear',
metric    = 'Accuracy')
g<- Sys.time()
